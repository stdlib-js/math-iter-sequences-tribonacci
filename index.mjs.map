{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/validate.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport validate from './validate.js';\n\n\n// VARIABLES //\n\nvar F0 = 0;\nvar F1 = 0;\nvar F2 = 1;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a Tribonacci sequence.\n*\n* ## Notes\n*\n* -   The returned iterator can only generate the first `64` Tribonacci numbers, as larger Tribonacci numbers cannot be safely represented in double-precision floating-point format.\n* -   If an environment supports `Symbol.iterator`, the returned iterator is iterable.\n*\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter=64] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} `iter` option must be less than or equal to `64`\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterTribonacciSeq();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* // ...\n*/\nfunction iterTribonacciSeq( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar f1;\n\tvar f2;\n\tvar f3;\n\tvar f;\n\tvar i;\n\n\topts = {\n\t\t'iter': 64\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tf1 = F0;\n\tf2 = F1;\n\tf3 = F2;\n\tf = 0;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( i === 1 ) {\n\t\t\tf = F0;\n\t\t} else if ( i === 2 ) {\n\t\t\tf = F1;\n\t\t} else if ( i === 3 ) {\n\t\t\tf = F2;\n\t\t} else {\n\t\t\tf = f1 + f2 + f3;\n\t\t\tf1 = f2;\n\t\t\tf2 = f3;\n\t\t\tf3 = f;\n\t\t}\n\t\treturn {\n\t\t\t'value': f,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterTribonacciSeq( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterTribonacciSeq;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 50\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'null2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'null2t', 'iter', options.iter ) );\n\t\t}\n\t\tif ( options.iter > 64 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be less than or equal to 64. Option: `%u`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n"],"names":["iterTribonacciSeq","options","opts","iter","FLG","err","f1","f2","f3","f","i","arguments","length","isPlainObject","TypeError","format","hasOwnProp","isNonNegativeInteger","RangeError","validate","setReadOnly","done","value","iteratorSymbol"],"mappings":";;6mBAiEA,SAASA,EAAmBC,GAC3B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKJ,GAHAR,EAAO,CACNC,KAAQ,IAEJQ,UAAUC,SACdP,EC/BF,SAAmBH,EAAMD,GACxB,IAAMY,EAAeZ,GACpB,OAAO,IAAIa,UAAWC,EAAQ,SAAUd,IAEzC,GAAKe,EAAYf,EAAS,QAAW,CAEpC,GADAC,EAAKC,KAAOF,EAAQE,MACdc,EAAsBhB,EAAQE,MACnC,OAAO,IAAIW,UAAWC,EAAQ,SAAU,OAAQd,EAAQE,OAEzD,GAAKF,EAAQE,KAAO,GACnB,OAAO,IAAIe,WAAYH,EAAQ,8EAA+E,OAAQd,EAAQE,MAE/H,CACD,OAAO,IACR,CDiBQgB,CAAUjB,EAAMD,GACjBI,GACJ,MAAMA,EAkBR,OAfAC,EAxDQ,EAyDRC,EAxDQ,EAyDRC,EAxDQ,EAyDRC,EAAI,EACJC,EAAI,EAIJU,EADAjB,EAAO,CAAA,EACY,QAenB,WAEC,GADAO,GAAK,EACAN,GAAOM,EAAIR,EAAKC,KACpB,MAAO,CACNkB,MAAQ,GAGC,IAANX,GAEa,IAANA,EADXD,EAvFM,EA0FW,IAANC,EACXD,EAzFM,GA2FNA,EAAIH,EAAKC,EAAKC,EACdF,EAAKC,EACLA,EAAKC,EACLA,EAAKC,GAEN,MAAO,CACNa,MAASb,EACTY,MAAQ,EAET,IArCDD,EAAajB,EAAM,UA8CnB,SAAcmB,GAEb,GADAlB,GAAM,EACDO,UAAUC,OACd,MAAO,CACNU,MAASA,EACTD,MAAQ,GAGV,MAAO,CACNA,MAAQ,EAET,IAtDIE,GACJH,EAAajB,EAAMoB,GA6DpB,WACC,OAAOvB,EAAmBE,EAC1B,IA7DMC,CA8DR"}